!function(a,b){return"function"==typeof define&&define.amd?void define(["angular"],function(a){return b(a)}):b(a)}(angular||null,function(a){"use strict";a.module("mobbrSession",["mobbrApi"]).factory("mobbrSession",function(a,b,c){return b.$mobbrStorage=a,b.$watch("$mobbrStorage.token",function(){b.$broadcast("mobbrApi:authchange",b.$mobbrStorage.user)}),{setUser:function(a){a.token&&(b.$mobbrStorage.token=a.token,delete a.token),b.$mobbrStorage.user=a},unsetUser:function(){delete b.$mobbrStorage.token,delete b.$mobbrStorage.user},isAuthorized:function(){return b.$mobbrStorage.token&&!0||!1},getAuthorization:function(){return"Basic "+c.btoa(":"+b.$mobbrStorage.token)}}}).config(function(a){a.interceptors.push("mobbrSessionInterceptor")}),a.module("mobbrSession").factory("mobbrSessionInterceptor",function(a,b,c){return console.log(c),{request:function(c){return a.isApiUrl(c.url)&&b.isAuthorized()&&(c.headers.Authorization=b.getAuthorization()),c},responseError:function(c){return a.isApiUrl(c.config.url&&401===c.status)&&b.unsetUser(),c}}})});